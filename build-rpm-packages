#!/bin/bash

#-----------------------------------------------------------
# build-rpm-packages
# version 1.0
# Install a list of applications using yum
# October 13, 2019
# AliciaTransmuted
# https://github.com/AliciaTransmuted/build-rpm-packages
# ----------------------------------------------------------
# dependancies: grep

###
### Functions
###

show_usage (){

printf "\n"
printf "Usage: sudo sh $0 [options [parameters]]\n"
printf "\n"
printf "version 1.0\n"
printf "\n"
printf "Options:\n"
printf " $color_on-i|--inputlist$color_off, list of rpm packages to install (Default input file is ~/rpm-packages) I.E. $color_on-i my-rpm-packages$color_off\n"
printf " $color_on-h|--help$color_off, Print help (this dialog) I.E. $color_on-h$color_off\n"
printf "\n"
printf "$0 installs a list of applications using yum \n"
printf "   - summarises the rpm installation process to the terminal\n"
printf "   - captures errors, missing packages, and other exceptions to a dedicated error file\n"
printf "\n"

return 0
}


# ***** initialize variables

cd /home/"${username}"

username=$USER

if [ -n "$SUDO_USER" ]; then
   username=$SUDO_USER
fi

in_list="rpm-packages"

log_dir="/home/""${username}""/logs"

log_heading_1="................................................................................................................."
log_heading_2="................................................................................................................."
log_heading_3="J O B     H A S     C O M P L E T E D"
log_heading_4="*****************************************************************************************************************"

# ***** colours
color_red="\e[91m"
color_green="\e[92m"
color_yellow="\e[93m"
color_cyan="\e[96m"

color_on="${color_green}"
color_off="\e[0m"

rpm_count=0
errors_found="N"

while [ ! -z "$1" ]; do
  case "$1" in
     --inputlist|-i)
         shift
         if [ -n "$1" ]; then
            in_list="$1"
         fi
         ;;
     --help|-h)
         show_usage
         exit 1
         ;;
     *)
        show_usage
        exit 1
        ;;
  esac
shift
done

input_list="/home/""${username}""/""${in_list}"

# ***** initialize logs

mkdir -p "${log_dir}"
sudo chown -R "${username}":"${username}" "${log_dir}"
sudo chmod -R 775 "${log_dir}"

rpm_log_dir="${log_dir}""/rpm"

mkdir -p "${rpm_log_dir}"
sudo chown -R "${username}":"${username}" "${rpm_log_dir}"
sudo chmod -R 775 "${rpm_log_dir}"

rpm_log_date=$(date '+%Y-%m-%d-%H-%M-%S')

rpm_log="${rpm_log_dir}""/""${rpm_log_date}""-rpm.log"
err_log="${rpm_log_dir}""/""${rpm_log_date}""-err.log"
tmp_log="${rpm_log_dir}""/""${rpm_log_date}""-tmp.log"

echo "${log_heading_1}" > "${rpm_log}"
echo "${log_heading_1}" > "${err_log}"

printf '%s\n' "${log_heading_1}"

log_entry="Installing rpm packages from text file ""${input_list}"
printf '%s\n' "${log_entry}"
echo "${log_entry}" >> "${rpm_log}"

log_entry="Generating log file ""${rpm_log}"
printf '%s\n' "${log_entry}"
echo "${log_entry}" >> "${rpm_log}"

printf '%s\n' "${log_heading_2}"
echo "${log_heading_2}" >> "${rpm_log}"



while read -r line; do

      rpm_count=$(( rpm_count + 1 ))
      
      search_arg1="Installed:""$line"
      search_arg2="Nothing to do."
      search_arg3="No match for argument: ""$line"
      
      log_entry="Installing rpm package ""${rpm_count}"": ""${line}""   "
      printf '%s\r' "${log_entry}"
      echo "${log_entry}" >> "${rpm_log}"

      sudo yum -y install "$line" > "${tmp_log}" 2>&1

      if grep --quiet "${search_arg1}" "${tmp_log}"
      then
         log_entry="Installing rpm package ""${rpm_count}"": ""${line}""   ""...""$line"" installed"
         echo "${log_entry}"
      elif grep --quiet "${search_arg2}" "${tmp_log}"
      then
         log_entry="Installing rpm package ""${rpm_count}"": ""${line}""   ""...""$line"" is already the newest version"
         echo "${log_entry}"
      elif grep --quiet "${search_arg3}" "${tmp_log}"
      then
         log_entry="Installing rpm package ""${rpm_count}"": ""${line}""   ""...""$line"" was not found"
         echo "${log_entry}"
         errors_found="Y"
         log_entry="***** ERROR installing ""$line"", review ""$err_log"" *****"
         printf '%s\n' "${log_entry}"
         echo "${log_entry}" >> "${rpm_log}"
         echo "${log_entry}" >> "${rpm_log}"
         echo "${log_entry}" >> "${rpm_log}"
         log_entry="***** ERROR installing ""$line"" *****"
         echo "${log_entry}" >> "${err_log}"
         cat "${tmp_log}" >> "${err_log}"
         echo "${log_heading_2}" >> "${err_log}"
     else
         errors_found="Y"
         log_entry="***** ERROR installing ""$line"", review ""$err_log"" *****"
         printf '%s\n' "${log_entry}"
         echo "${log_entry}" >> "${rpm_log}"
         echo "${log_entry}" >> "${rpm_log}"
         echo "${log_entry}" >> "${rpm_log}"
         log_entry="***** ERROR installing ""$line"" *****"
         echo "${log_entry}" >> "${err_log}"
         cat "${tmp_log}" >> "${err_log}"
         echo "${log_heading_2}" >> "${err_log}"
      fi
       
      cat "${tmp_log}" >> "${rpm_log}"
      echo "${log_heading_2}" >> "${rpm_log}"
      
done < "${input_list}"



rm -f "${tmp_log}"

if [ "${errors_found}" = "Y" ];then
   printf '%s\n' "${log_heading_2}"
   log_entry="***** ERROR(S) found, review ""$err_log"" for details *****"
   printf '%s\n' "${log_entry}"
   echo "${log_entry}" >> "${rpm_log}"
   echo "${log_heading_2}" >> "${rpm_log}"
   echo "${log_heading_3}" >> "${err_log}"
   echo "${log_heading_1}" >> "${err_log}"
   sudo chown "${username}":"${username}" "${err_log}"
   sudo chmod 775 "${err_log}"
else
   rm -f "${err_log}"
fi

printf '%s\n' "${log_heading_2}"

echo "${log_heading_3}" >> "${rpm_log}"
printf '%s\n' "${log_heading_3}"

echo "${log_heading_1}" >> "${rpm_log}"
printf '%s\n' "${log_heading_1}"

sudo chown "${username}":"${username}" "${rpm_log}"
sudo chmod 775 "${rpm_log}"

cd
